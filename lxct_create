#!/bin/bash
# ================================================================================
# LXC-tools: Appliance and LXC container builder for Debian GNU/Linux (and derivatives)
#
# Copyright © 2010 Jesús Lara Giménez (phenobarbital) <jesuslara@devel.com.ve>>
# Version: 0.2    
#
#    Developed by Jesus Lara (phenobarbital) <jesuslara@phenobarbital.info>
#    https://github.com/phenobarbital/mandarinalinux
#    
#    This script is based on the lxc-debian example script that ships with lxc.
#    Copyright (C) 2010 Nigel McNie
#
#    License: GNU GPL version 3  <http://gnu.org/licenses/gpl.html>.
#    This is free software: you are free to change and redistribute it.
#    There is NO WARRANTY, to the extent permitted by law.
# ================================================================================

###
# lxct_create
# create a lxc container
##

set -e

# get configuration
if [ -e /etc/lxc-tools/lxc-tools.conf ]; then
    . /etc/lxc-tools/lxc-tools.conf
else
    . ./share/lxc-tools.conf
fi

####================= Main execution ==========================####

usage() {
    echo "Usage: $(basename $(readlink -f $0)) {create|test} [-n NAME] [-t TEMPLATE] [-r ROLE]"
    exit 0
}

help() {
cat <<EOF
    
This script is a helper to create lxc system containers.

The script will create the container configuration file following
the informations submitted interactively with 'lxct-create create'

  -n, --name                 container hostname
  -t, --template             template name (debian, ubuntu, canaima, etc)
  -r, --role                 role-based template name
      --help     muestra esta ayuda y finaliza
      --version  informa de la versión y finaliza
EOF
}

### main execution program

# si no pasamos ningun parametro
if [ $# = 0 ]; then
    usage
    exit 1
fi

COMMAND=$1

shift
while getopts "n:d:h" flag ; do
    case "$flag" in
    	h)  help && exit 0;;
        t)  # template
        	TEMPLATE="$OPTARG";;
        n)  # name
        	NAME="$OPTARG";;
        r)  # role-name
        	ROLE="$OPTARG";;
        *)     usage && exit 1;;
    esac
done

case "$COMMAND" in
    "create")
    	# container creation
    	configure; create;;
    "test")
    	# container test
    	lxct_test;;
    "-h")
		help && exit 0;;
    "--help")
		help && exit 0;;
	"--version")
		get_version && exit 0;;
    *)
    	usage
        exit 1
        ;;
esac

exit 0
