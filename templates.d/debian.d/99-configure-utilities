#!/bin/bash
# 99-configure-utilities
#
#  This script configure vim, bashrc, profile and other utilities in the
# chroot() installation.
#

## install screen
install_package screen

## configure bashrc
sed -i 's/^#force_color_prompt=yes/force_color_prompt=yes/' $ROOTFS/etc/skel/.bashrc
# enable colors in bash
sed -i "s/^# export LS_OPTIONS='--color=auto'/export LS_OPTIONS='--color=auto'/" $ROOTFS/root/.bashrc
sed -i 's/^# eval "`dircolors`"/eval "`dircolors`"/' $ROOTFS/root/.bashrc
sed -i "s/^# alias ls='ls $LS_OPTIONS'/alias ls='ls $LS_OPTIONS'/" $ROOTFS/root/.bashrc
sed -i "s/^# alias ll='ls $LS_OPTIONS -l'/alias ll='ls $LS_OPTIONS -l'/" $ROOTFS/root/.bashrc


## configure vim
cat <<VIM_EOF > $ROOTFS/etc/vim/vimrc

runtime! debian.vim
 
if has("syntax")
  syntax on
endif
 
if has("autocmd")
  au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
endif
 
if has("autocmd")
  filetype plugin indent on
endif
 
 
set showmatch       " Show matching brackets.
set ignorecase      " Do case insensitive matching
set incsearch       " Incremental search
set mouse=a         " Enable mouse usage (all modes)
set number          " Mostrar los números de línea
set textwidth=80    " Fijar ancho de línea en 80 caracteres
set softtabstop=4
set shiftwidth=4
set tabstop=4
set expandtab
 
"set showcmd        " Show (partial) command in status line.
"set smartcase      " Do smart case matching
"set autowrite      " Automatically save before commands like :next and :make
"set hidden         " Hide buffers when they are abandoned
 
if filereadable("/etc/vim/vimrc.local")
  source /etc/vim/vimrc.local
endif
VIM_EOF

# configure vimrc.local
cat <<VIMRC_EOF > $ROOTFS/etc/vim/vimrc.local

" Environment {
    " Basics {
        set nocompatible        " must be first line
        set background=dark     " Assume a dark background
    " }
" }

" General {
        syntax on
if has("autocmd")
  filetype plugin indent on
endif
    set viewoptions=folds,options,cursor,unix,slash " better unix / windows compatibility
    set history=1000                " Store a ton of history (default is 20)
    " }
" }

" Vim UI {
    if has('cmdline_info')
        set ruler                   " show the ruler
        set rulerformat=%30(%=\:b%n%y%m%r%w\ %l,%c%V\ %P%) " a ruler on steroids
        set showcmd                 " show partial commands in status line and
                                    " selected characters/lines in visual mode
    endif
    set showmatch                   " show matching brackets/parenthesis
    set incsearch                   " find as you type search
" }

" Formatting {
    set nowrap                      " wrap long lines
    set autoindent                  " indent at the same level of the previous line
    set shiftwidth=4                " use indents of 4 spaces
    set expandtab                   " tabs are spaces, not tabs
    set tabstop=4                   " an indentation every four columns
    set softtabstop=4               " let backspace delete indent
    "set matchpairs+=<:>            " match, to be used with %
    set pastetoggle=<F12>           " pastetoggle (sane indentation on pastes)
    "set comments=sl:/*,mb:*,elx:*/  " auto format comment blocks
    " Remove trailing whitespaces and ^M chars
    autocmd FileType c,cpp,java,php,js,python,twig,xml,yml autocmd BufWritePre <buffer> :call setline(1,map(getline(1,"$"),'substitute(v:val,"\\s\\+$","","")'))
" }

" Use local vimrc if available {
    if filereadable(expand("~/.vimrc.local"))
        source ~/.vimrc.local
    endif
" }
VIMRC_EOF


## install bash-completion
install_package bash-completion

## enable bash-completion
sed -i '/^#if ! shopt -oq posix; then$/,+6s/# / /' $ROOTFS/etc/bash.bashrc

cat <<PROFILE_EOF >>$ROOTFS/etc/profile

# enable bash-completion
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    . /etc/bash_completion
fi

PROFILE_EOF

#
#  Remove some standard packages and unwanted stuff
#

# PPP stuff.
remove_package pppconfig
remove_package pppoeconf
remove_package pppoe
remove_package ppp
remove_package libpcap0.7

# Editors
remove_package nano
remove_package ed
remove_package nvi

# Syslog
remove_package klogd
remove_package sysklogd

# manpages
remove_package manpages
remove_package man-db
remove_package info

# misc
remove_package tasksel tasksel-data
remove_package pciutils
remove_package fdutils
remove_package cpio
